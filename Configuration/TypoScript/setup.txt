tt_content {
	stdWrap.outerWrap = <div class="rs_skip">|</div>
	stdWrap.outerWrap.if {
		isTrue.field = tx_readspeaker_disable
	}
}

plugin.tx_readspeaker {
	settings {
		enable = {$plugin.tx_readspeaker.settings.enable}
		enableDocReader = {$plugin.tx_readspeaker.settings.enableDocReader}
		docReaderFileExtensions = {$plugin.tx_readspeaker.settings.docReaderFileExtensions}

		stylesheet = {$plugin.tx_readspeaker.settings.stylesheet}
		customerId = {$plugin.tx_readspeaker.settings.customerId}
		baseUrl = {$plugin.tx_readspeaker.settings.baseUrl}
		language = {$plugin.tx_readspeaker.settings.language}
		voice = {$plugin.tx_readspeaker.settings.voice}
		readId = {$plugin.tx_readspeaker.settings.readId}
		renderTo = {$plugin.tx_readspeaker.settings.renderTo}
		scriptUrl = {$plugin.tx_readspeaker.settings.scriptUrl}
		applicationUrl = {$plugin.tx_readspeaker.settings.applicationUrl}
		docReaderUrl = {$plugin.tx_readspeaker.settings.docReaderUrl}
		buttonStyle = {$plugin.tx_readspeaker.settings.buttonStyle}
	}

	renderObject =< plugin.tx_readspeaker.widget

	widget.renderObject = COA
	widget.renderObject {
		10 = LOAD_REGISTER
		10 {
			readerElementId {
				data = register:readSpeakerCount
				wrap = tx-readspeaker-reader-|
			}
		}

		20 = COA
		20 {
			50 = TEXT
			50 {
				data = LLL:EXT:readspeaker/locallang.xml:label.readContent
			}

			stdWrap {
				typolink {
					parameter < plugin.tx_readspeaker.settings.applicationUrl

					parameter.postCObject = COA
					parameter.postCObject {
						stdWrap {
							wrap = ?|
						}

						10 = TEXT
						10 {
							value < plugin.tx_readspeaker.settings.customerId
							wrap = &customerid=|
						}
						20 = TEXT
						20 {
							value < plugin.tx_readspeaker.settings.language
							wrap = &lang=|
						}
						30 = TEXT
						30 {
							value < plugin.tx_readspeaker.settings.voice
							required = 1
							wrap = &voice=|
						}
						40 = TEXT
						40 {
							value < plugin.tx_readspeaker.settings.readId
							rawUrlEncode = 1
							wrap = &readid=|
						}
						50 = TEXT
						50 {
							data = getindpenv:TYPO3_REQUEST_URL
							override < plugin.tx_readspeaker.settings.baseUrl
							override {
								required = 1
								replacement.10 {
									search = /\/$/
									replace =
									useRegExp = 1
								}
								dataWrap = |{getindpenv:REQUEST_URI}
							}
							rawUrlEncode = 1
							wrap = &url=|
						}
					}

					ATagParams.cObject = COA
					ATagParams.cObject {
						10 = TEXT
						10 {
							value < plugin.tx_readspeaker.settings.buttonStyle
							htmlSpecialChars = 1
							wrap = class="|"
						}
						20 = TEXT
						20 {
							value = accesskey="L"
							noTrimWrap = | ||
						}
						30 = TEXT
						30 {
							data = register:readerElementId
							wrap = onclick="readpage(this.href, '|'); return false;"
							noTrimWrap = | ||
						}
						40 = TEXT
						40 {
							data = LLL:EXT:readspeaker/locallang.xml:description.readContent
							htmlSpecialChars = 1
							wrap = title="|"
							noTrimWrap = | ||
						}
					}
				}

				wrap = <div class="tx-readspeaker-link-wrap">|</div>
			}
		}

		30 = TEXT
		30 {
			data = register:readerElementId
			wrap = <div class="tx-readspeaker-reader-wrap"><div id="|"></div></div>
		}

		90 = RESTORE_REGISTER

		stdWrap {
			dataWrap = <div id="tx-readspeaker-widget-{register:readSpeakerCount}" class="tx-readspeaker-widget rs_skip">|</div>
		}
	}

	document.renderObject = COA
	document.renderObject {
		20 = COA
		20 {
			50 = TEXT
			50 {
				data = LLL:EXT:readspeaker/locallang.xml:label.read
			}

			stdWrap {
				typolink {
					parameter < plugin.tx_readspeaker.settings.docReaderUrl

					parameter.postCObject = COA
					parameter.postCObject {
						stdWrap {
							wrap = ?|
						}

						10 = TEXT
						10 {
							value = bsmdc
							wrap = &cid=|
						}
						20 = TEXT
						20 {
							value < plugin.tx_readspeaker.settings.language
							wrap = &lang=|
						}
						30 = TEXT
						30 {
							value < plugin.tx_readspeaker.settings.voice
							required = 1
							wrap = &voice=|
						}
						40 = TEXT
						40 {
							data = register:docReaderCurrentDocument
							rawUrlEncode = 1
							wrap = &url=|
						}
					}

					ATagParams.cObject = COA
					ATagParams.cObject {
						10 = TEXT
						10 {
							# value < plugin.tx_readspeaker.settings.buttonStyle
							value = tx-readspeaker-icon-default-12
							htmlSpecialChars = 1
							noTrimWrap = |class="tx-readspeaker-docreader |"|
						}
						20 = TEXT
						20 {
							value = tx-readspeaker-docreader
							wrap = onclick="window.open(this.href, '|'); return false;"
							noTrimWrap = | ||
						}
						30 = TEXT
						30 {
							data = LLL:EXT:readspeaker/locallang.xml:description.readDocument
							htmlSpecialChars = 1
							wrap = title="|"
							noTrimWrap = | ||
						}
					}
				}
			}
		}

		30 = TEXT
		30 {
			data = register:docReaderCurrentContent
			noTrimWrap = | ||
		}
	}
}